{"version":3,"sources":["components/MatchCard/MatchCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["MatchCard","props","onClick","setClicked","id","className","alt","name","src","image","Wrapper","children","Title","correctCount","topScore","message","App","state","cards","clickedCard","filter","card","clicked","i","length","setState","sort","a","b","Math","random","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"k5BAWeA,G,MARG,SAAAC,GAAK,OACtB,yBAAKC,QAAS,kBAAMD,EAAME,WAAWF,EAAMG,KAAKC,UAAU,iBACzD,yBAAKA,UAAU,iBACd,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOL,GAAIH,EAAMG,SCAtCM,G,MAFC,SAAAT,GAAK,OAAI,yBAAKI,UAAU,WAAWJ,EAAMU,YCC1CC,G,MAFD,SAAAX,GAAK,OAAI,wBAAII,UAAU,SAASJ,EAAMU,YCIhDE,G,MAAe,GACfC,EAAW,EACXC,EAAU,8BA0FCC,E,4MAtFXC,MAAQ,CACJC,QACAL,eACAC,WACAC,W,EAEJZ,WAAa,SAAAC,GAET,IAAMc,EAAQ,EAAKD,MAAMC,MAEnBC,EAAcD,EAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKjB,KAAOA,KAErD,GAAIe,EAAY,GAAGG,QAAQ,CACvBT,EAAe,EACfE,EAAU,2BAEV,IAAK,IAAIQ,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAC9BL,EAAMK,GAAGD,SAAU,EAEvB,EAAKG,SAAS,CAACV,YACf,EAAKU,SAAS,CAACZ,iBACf,EAAKY,SAAS,CAACP,eAGd,GAAIL,EAAe,EAEpBM,EAAY,GAAGG,SAAU,EACzBT,IACAE,EAAU,yBAENF,EAAeC,IACfA,EAAWD,EACX,EAAKY,SAAS,CAACX,cAGnBI,EAAMQ,MAAK,SAASC,EAAGC,GAAG,MAAO,GAAMC,KAAKC,YAE5C,EAAKL,SAAS,CAACV,YACf,EAAKU,SAAS,CAACZ,iBACf,EAAKY,SAAS,CAACP,cAGf,CACAC,EAAY,GAAGG,SAAU,EACzBT,EAAe,EACfE,EAAU,WACVD,EAAW,EACX,EAAKW,SAAS,CAACX,aAEf,IAAK,IAAIS,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAC9BL,EAAMK,GAAGD,SAAU,EAGvBJ,EAAMQ,MAAK,SAASC,EAAGC,GAAG,MAAO,GAAMC,KAAKC,YAE5C,EAAKL,SAAS,CAACV,YACf,EAAKU,SAAS,CAACZ,iBACf,EAAKY,SAAS,CAACP,Y,uDAId,IAAD,OACJ,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,qBAEA,wBAAIb,UAAU,YAAY0B,KAAKd,MAAMF,SACrC,wBAAIV,UAAU,wBAAd,UAA6C0B,KAAKd,MAAMJ,aAAxD,IAAsE,6BAAtE,eAAyFkB,KAAKd,MAAMH,UAEpG,yBAAKT,UAAY,aACb,yBAAKA,UAAY,OACZ0B,KAAKd,MAAMC,MAAMc,KAAI,SAAAX,GAAI,OACtB,kBAAC,EAAD,CACAlB,WAAY,EAAKA,WACjBC,GAAIiB,EAAKjB,GACT6B,IAAKZ,EAAKjB,GACVK,MAAOY,EAAKZ,kB,GA9EtByB,aCNlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.91bac516.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MatchCard.css\";\n\nconst MatchCard = props => (\n\t<div onClick={() => props.setClicked(props.id)} className=\"card col-md-3\">\n\t\t<div className=\"img-container\">\n\t\t\t<img alt={props.name} src={props.image} id={props.id} />\n\t\t</div>\n\t</div>\n);\n\nexport default MatchCard;","  \nimport React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React, { Component } from \"react\";\nimport cards from \"./cards.json\"\nimport MatchCard from \"./components/MatchCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport \"./App.css\";\n\nlet correctCount = 0;\nlet topScore = 0;\nlet message = \"Click on an image to begin!\"\n\nclass App extends Component{\n    // Initialize state with cards.json\n    state = {\n        cards,\n        correctCount,\n        topScore,\n        message\n    };\n    setClicked = id => {\n        // Copy of state matches\n        const cards = this.state.cards;\n        // Filter clicked images\n        const clickedCard = cards.filter(card => card.id === id);\n        // If user already clicked image...\n        if (clickedCard[0].clicked){\n            correctCount = 0;\n            message = \"You guessed incorrectly!\"\n            // Reset all cards to start over\n            for (let i = 0; i < cards.length; i++){\n                cards[i].clicked = false;\n            }\n            this.setState({message});\n            this.setState({correctCount});\n            this.setState({cards});\n        }\n        // Continue game otherwise\n        else if (correctCount < 8){\n            // Set card's image to clicked: true\n            clickedCard[0].clicked = true;\n            correctCount++;\n            message = \"You guessed correctly!\"\n            // Set top score\n            if (correctCount > topScore){\n                topScore = correctCount;\n                this.setState({topScore});\n            }\n            // Randomly shuffle images after correct guess\n            cards.sort(function(a, b){return 0.5 - Math.random()});\n            // Update state\n            this.setState({message});\n            this.setState({correctCount});\n            this.setState({cards});\n        }\n        // If user wins ...\n        else{\n            clickedCard[0].clicked = true;\n            correctCount = 0;\n            message = \"You won!\";\n            topScore = 9;\n            this.setState({topScore});\n            // Reset game to play again\n            for (let i = 0; i < cards.length; i++){\n                cards[i].clicked = false;\n            }\n            // Randomly shuffle images after winning game\n            cards.sort(function(a, b){return 0.5 - Math.random()});\n            // Update state\n            this.setState({message});\n            this.setState({correctCount});\n            this.setState({cards});\n        }\n    };\n    // Render App\n    render(){\n        return(\n            <Wrapper>\n                <Title>Clicky Game!</Title>\n                {/* Show scores and messages */}\n                <h3 className=\"scoreDiv\">{this.state.message}</h3>\n                <h3 className=\"scoreDiv card-header\">Score: {this.state.correctCount} <br /> Top Score: {this.state.topScore}</h3>\n                {/* Game Container */}\n                <div className = \"container\">\n                    <div className = \"row\">\n                        {this.state.cards.map(card=>(\n                            <MatchCard\n                            setClicked={this.setClicked}\n                            id={card.id}\n                            key={card.id}\n                            image={card.image}\n                            />\n                        ))}\n                    </div>\n                </div>\n            </Wrapper>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css'\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}